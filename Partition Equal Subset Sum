 bool help(int arr[],int n,vector<vector<int>>&dp,int sum){
       // if(sum==0 && n==0)  return true;
       if(sum==0) return true;
       if (n==0) return false;
        if(dp[n][sum]!=-1) return dp[n][sum];
        if(arr[n-1]<=sum){
            return dp[n][sum]=(help(arr,n-1,dp,sum)|| help(arr,n-1,dp,sum-arr[n-1]));
        }
        else{
            return dp[n][sum]=help(arr,n-1,dp,sum);
        }
      //  return false;
    }
    int equalPartition(int N, int arr[])
    {
        // code here
        int sum=0;
        for(int i=0;i<N;i++){
            sum+=arr[i];
        }
        if(sum%2==1) return false;
        
        vector<vector<int>>dp(N+1,vector<int>(sum/2+1,-1));
         return help(arr,N,dp,sum/2);
    }
